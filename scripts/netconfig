#!/bin/sh

INTERFACES=""
DIALOG_TAGS=""

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

echo -n > $BSDINSTALL_TMPETC/rc.conf.net

for IF in `ifconfig -l`; do
	if [ $IF != "lo0" ]; then
		INTERFACES="$INTERFACES $IF"
		DESC=`sysctl -n dev.$(echo $IF | sed -E 's/([[:alpha:]]*)([[:digit:]]*)/\1.\2/g').%desc`
		DIALOG_TAGS="$DIALOG_TAGS $IF \"$DESC\""
	fi
done

exec 3>&1
INTERFACE=`echo $DIALOG_TAGS | xargs dialog --backtitle 'FreeBSD Installer' --title 'Network Configuration' --menu 'Please select a network interface to configure:' 0 0 0 2>&1 1>&3`
if [ $? -eq $DIALOG_CANCEL ]; then exit 1; fi
exec 3>&-

# Do a dirty check to see if this a wireless interface -- there should be a
# better way
IFCONFIG_PREFIX=""
if ifconfig $INTERFACE | grep -q 'media: IEEE 802.11 Wireless'; then
	NEXT_WLAN_IFACE=wlan0	# XXX
	echo wlans_$INTERFACE=\"$NEXT_WLAN_IFACE\" >> $BSDINSTALL_TMPETC/rc.conf.net
	IFCONFIG_PREFIX="WPA "
	if [ ! -z $BSDINSTALL_CONFIGCURRENT ]; then
		ifconfig $NEXT_WLAN_IFACE create wlandev $INTERFACE
		ifconfig $NEXT_WLAN_IFACE up
	fi
	bsdinstall wlanconfig $NEXT_WLAN_IFACE || exec $0
	INTERFACE="$NEXT_WLAN_IFACE"
fi

dialog --backtitle 'FreeBSD Installer' --title 'Network Configuration' --yesno 'Would you like to use DHCP to configure this interface?' 0 0
if [ $? -eq $DIALOG_OK ]; then
	echo ifconfig_$INTERFACE=\"${IFCONFIG_PREFIX}DHCP\" >> $BSDINSTALL_TMPETC/rc.conf.net

	if [ ! -z $BSDINSTALL_CONFIGCURRENT ]; then
		dialog --backtitle 'FreeBSD Installer' --infobox "Acquiring DHCP lease..." 0 0
		dhclient $INTERFACE 2>> $BSDINSTALL_LOG
		if [ $? -ne 0 ]; then
			dialog --backtitle 'FreeBSD Installer' --msgbox "DHCP lease acquisition failed." 0 0
			exec $0
		fi
	fi
	exit 0
fi

IP_ADDRESS=`ifconfig $INTERFACE inet | awk '/inet/ {printf("%s\n", $2); }'`
NETMASK=`ifconfig $INTERFACE inet | awk '/inet/ {printf("%s\n", $4); }'`
ROUTER=`netstat -rn -f inet | awk '/default/ {printf("%s\n", $2);}'`

exec 3>&1
IF_CONFIG=$(dialog --backtitle 'FreeBSD Installer' --title 'Network Configuration' --form 'Static Network Interface Configuration' 0 0 0 \
	'IP Address' 1 0 "$IP_ADDRESS" 1 20 16 0 \
	'Subnet Mask' 2 0 "$NETMASK" 2 20 16 0 \
	'Default Router' 3 0 "$ROUTER" 3 20 16 0 \
	\
	'Nameserver' 5 0 "" 5 20 16 0 \
	'Search Domain' 6 0 "" 6 20 20 0 \
2>&1 1>&3)
if [ $? -eq $DIALOG_CANCEL ]; then exec $0; fi
exec 3>&-

echo $INTERFACE $IF_CONFIG | 
    awk -v prefix="$IFCONFIG_PREFIX" '{
	printf("ifconfig_%s=\"%s%s netmask %s\"\n", $1, prefix, $2, $3);
	printf("defaultrouter=\"%s\"\n", $4);
    }' >> $BSDINSTALL_TMPETC/rc.conf.net

if [ ! -z $BSDINSTALL_CONFIGCURRENT ]; then
	. $BSDINSTALL_TMPETC/rc.conf.net
	ifconfig $INTERFACE `eval echo \\\$ifconfig_$INTERFACE`
	route delete default
	route add default $defaultrouter
fi


echo $IF_CONFIG | 
    awk '{
	if ($4 != "")
		printf("nameserver %s\n", $4);
	if ($5 != "")
		printf("search %s\n", $5);
    }' > $BSDINSTALL_TMPETC/resolv.conf

